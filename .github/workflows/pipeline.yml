name: pipeline

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  branch-naming-rules:
    if: "!contains(github.event.head_commit.message , 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - name: Check branch name
        uses: deepakputhraya/action-branch-name@master
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          regex: '([a-z])+\/([a-z])+' # Regex the branch should match. This example enforces grouping
          allowed_prefixes: "feature,stable,fix" # All branches should start with the given prefix
          ignore: master,develop # Ignore exactly matching branch names from convention
          min_length: 5 # Min length of the branch name
          max_length: 200 # Max length of the branch name
      - name: Skipped
        if: "startsWith(github.ref, 'refs/tags/')"
        run: echo "skipped"

  unit-test:
    needs: [branch-naming-rules]
    name: ${{ matrix.friendlyName }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [17.6.0]
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            friendlyName: Unit Test - Ubuntu
          - os: macos-latest
            friendlyName: Unit Test - MacOS
          - os: windows-latest
            friendlyName: Unit Test - Windows
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Run Install
        run: |
          npm install

      - name: Run Unit Test
        run: npm run test:unit

      # - name: Push to Coveralls
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}

  functional-test:
    needs: [unit-test]
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: ${{ matrix.friendlyName }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_ENV: development

    strategy:
      matrix:
        node: [17.6.0]
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            friendlyName: Functional Test - Ubuntu

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      #      - name: Install Node.js, NPM and Yarn
      #        uses: actions/setup-node@v3
      #        with:
      #          node-version: ${{ matrix.node }}

      #      - name: Run Install
      #        run: |
      #          npm install
      #
      #      - name: Run Functional Test
      #        run: |
      #          npm run test:e2e:ci3
      #        env:
      #          DEBUG: start-server-and-test

      - name: Run Cypress using Docker
        run: |
          docker compose up --exit-code-from server

      - name: Deploy Reports to gh-pages
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: cypress/reports

  release:
    needs: [unit-test, functional-test]
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: ${{ matrix.friendlyName }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_ENV: develop
    strategy:
      matrix:
        node: [17.6.0]
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            friendlyName: Release - Ubuntu
          - os: macos-latest
            friendlyName: Release - MacOS
          - os: windows-latest
            friendlyName: Release - Windows
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Run Install
        run: |
          npm install

      - name: Build electron
        run: |
          npm run app:build
          ls -l dist_electron

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: false
          generate_release_notes: true
          files: |
            dist_electron/*.exe
            dist_electron/*.exe.blockmap
            dist_electron/*.AppImage
            dist_electron/*.snap
            dist_electron/*-mac.zip
            dist_electron/*.dmg
            dist_electron/*.dmg.blockmap
            dist_electron/latest*.yml
